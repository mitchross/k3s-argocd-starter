prometheus:
  prometheusSpec:
    replicas: 1
    retention: 15d
    retentionSize: 15GB
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
      limits:
        memory: 2Gi
        cpu: 1000m
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534
    additionalScrapeConfigs:
      - job_name: 'thanos-sidecar'
        static_configs:
          - targets: ['thanos-sidecar.monitoring.svc.cluster.local:10902']
    thanos:
      enabled: true
      objectStorageConfig:
        secretName: thanos-objstore-config
        secretKey: objstore.yml
alertmanager:
  alertmanagerSpec:
    replicas: 1
    retention: 72h
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    resources:
      requests:
        memory: 128Mi
        cpu: 50m
      limits:
        memory: 256Mi
        cpu: 100m
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534
grafana:
  replicas: 1
  admin:
    existingSecret: grafana-credentials
    userKey: admin-user
    passwordKey: admin-password
  persistence:
    enabled: true
    storageClassName: longhorn
    size: 5Gi
  resources:
    requests:
      memory: 256Mi
      cpu: 125m
    limits:
      memory: 512Mi
      cpu: 250m
  securityContext:
    runAsNonRoot: true
    runAsUser: 472
    fsGroup: 472
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'monitoring-dashboards'
          orgId: 1
          folder: 'Monitoring'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/monitoring
  dashboards:
    monitoring:
      kubernetes-cluster-overview:
        gnetId: 7249
        revision: 1
        datasource: Prometheus
      kubernetes-nodes:
        gnetId: 1860
        revision: 29
        datasource: Prometheus
      kubernetes-pods:
        gnetId: 6417
        revision: 1
        datasource: Prometheus
      loki-logs:
        gnetId: 13639
        revision: 2
        datasource: Loki
  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki-gateway.monitoring.svc.cluster.local
      isDefault: false
    - name: Tempo
      type: tempo
      url: http://tempo-query-frontend.monitoring.svc.cluster.local:3100
      isDefault: false
    - name: Thanos
      type: prometheus
      url: http://thanos-query.monitoring.svc.cluster.local:9090
      isDefault: false
nodeExporter:
  enabled: true
  hostNetwork: true
  hostPID: true
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 128Mi
      cpu: 100m
kubeStateMetrics:
  enabled: true
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m
prometheusOperator:
  enabled: true
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    fsGroup: 65534
kubeApiServer:
  enabled: true
kubelet:
  enabled: true
kubeControllerManager:
  enabled: true
  endpoints:
    - 192.168.101.176 # Update with your control plane IPs
kubeScheduler:
  enabled: true
  endpoints:
    - 192.168.101.176 # Update with your control plane IPs
kubeProxy:
  enabled: true
kubeEtcd:
  enabled: true
  endpoints:
    - 192.168.101.176 # Update with your control plane IPs
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverSlos: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true
